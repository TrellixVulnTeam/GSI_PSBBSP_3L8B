# coding: utf-8

from __future__ import absolute_import
from .base_model_ import Model
from datetime import date, datetime
from typing import List, Dict
from ..util import deserialize_model


class SupportSystemDataclass(Model):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, support_system_id: int=None, dataclass_id: int=None):
        """
        SupportSystemDataclass - a model defined in Swagger

        :param support_system_id: The support_system_id of this SupportSystemDataclass.
        :type support_system_id: int
        :param dataclass_id: The dataclass_id of this SupportSystemDataclass.
        :type dataclass_id: int
        """
        self.swagger_types = {
            'support_system_id': int,
            'dataclass_id': int
        }

        self.attribute_map = {
            'support_system_id': 'support_system_id',
            'dataclass_id': 'dataclass_id'
        }

        self._support_system_id = support_system_id
        self._dataclass_id = dataclass_id

    @classmethod
    def from_dict(cls, dikt) -> 'SupportSystemDataclass':
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SupportSystemDataclass of this SupportSystemDataclass.
        :rtype: SupportSystemDataclass
        """
        return deserialize_model(dikt, cls)

    @property
    def support_system_id(self) -> int:
        """
        Gets the support_system_id of this SupportSystemDataclass.
        Support system identifier

        :return: The support_system_id of this SupportSystemDataclass.
        :rtype: int
        """
        return self._support_system_id

    @support_system_id.setter
    def support_system_id(self, support_system_id: int):
        """
        Sets the support_system_id of this SupportSystemDataclass.
        Support system identifier

        :param support_system_id: The support_system_id of this SupportSystemDataclass.
        :type support_system_id: int
        """

        self._support_system_id = support_system_id

    @property
    def dataclass_id(self) -> int:
        """
        Gets the dataclass_id of this SupportSystemDataclass.
        Dataclass identifier

        :return: The dataclass_id of this SupportSystemDataclass.
        :rtype: int
        """
        return self._dataclass_id

    @dataclass_id.setter
    def dataclass_id(self, dataclass_id: int):
        """
        Sets the dataclass_id of this SupportSystemDataclass.
        Dataclass identifier

        :param dataclass_id: The dataclass_id of this SupportSystemDataclass.
        :type dataclass_id: int
        """

        self._dataclass_id = dataclass_id

